to-do list:
1-) Create the instance(app and instance create info), check validation layers, get extensions and populate debug messenger
2-) Find the validation layers
4-) Setup debug messenger
3-) Find physical devices, check if it is suitable for use and queue families
4-) Create logical device with queue families, extensions, device features and valiadtion layers
5-) Create the surface 
6-) Create swap chain(query swap chain support, surface, present mode,  images, image formats, image views, framebuffers)
- Create the image views
- Create the render pass(color attachments, dependencies)
7-) Create shader modules and load them into pipeline shader stages
8-) Configure fixed functions (dynamic state, vertex input, input assembly, viewports and scissors, rasterizer, multisampling, depth and stencil testing, color blending, pipeline layout)
9-) Render passes
10-) Create graphics pipeline with fixed functions and shaders
11-) Create framebuffers with swap chain image views
12-) Create command pool queue family indices
13-) Create command buffer allocation.
14-) Record command buffer with render pass 
15-) Create sync objects(semaphores and fence)
16-) Draw frame with sync objects
17-) Create vertex buffers before creating command buffers. Create a vertex struct, define 2 functions for geting binding and attribute descriptions. Create buffer info object and fill the props. Get memory requirements, allocate memory, find memory type and fill in the props. Bind buffer to the memory, map the memory, copy the vertex data to the memory and unmap the memory. Then add vertices to the record command buffer in the begin and end  render pass.
